# Copyright 2022 The Reg Reporting Blueprint Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'credit_poc'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'bigquery'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models
models:
  credit_poc:

    # Storing the failures for all the tests
    +store_failures: true  # all tests

    # Config to store the columns descriptions in datacatalog
    +persist_docs:
        relation: true
        columns: true

    # src contains ephemeral filters of source data
    src:
      +tags: source
      +materialized: ephemeral

    # staging prepares data in a denormalised form, while
    # still retaining all source data with little value-add. It
    # re-shapes the data.
    #
    # Only one table is explicitly materialized in staging
    staging:
      +tags: staging
      +materialized: ephemeral

    # modelling prepares the data for modelling, including adding
    # derived features, calculating IV values, and pivoting data.
    modelling:
      +tags: modelling
      +materialized: table

    # uv_eval contains models auto-generated by the 'generate_metrics_uv_eval' script,
    # which perform univariate analysis on the feature and the label
    uv_eval:
      +tags: uv_eval
      +materialized: model
      +post-hook: "{{ dbt_ml.model_audit() }}"


# Variables used in the SQL models
vars:
    financial_bq_data: financial_data  # dataset where the source data is stored
    dbt_ml:audit_schema: "{{ env_var('CREDIT_POC_BQ_DATA') }}" # Required for DBT ML
    dbt_ml:audit_table: "ml_models_audit"  # Required for DBT ML audit information

# Start and End hooks
on-run-start:
  - "{{ dbt_ml.create_model_audit_table() }}"                                              # BQML model  logging
  #- "{{ dbt_log.create_dbt_log(target) }}"                                                 # Tracking DBT Performance
  #- "{{ dbt_log.insert_dbt_log(target, 'START', dbt_log.graph_to_json(target, graph)) }}"  # Tracking DBT Performance

#on-run-end:
#  - "{{ dbt_log.insert_dbt_log(target, 'END', dbt_log.results_to_json(results)) }}"

